{"version":3,"sources":["serviceWorker.js","assets/img/instagram-logo.svg","components/Topbar/index.jsx","components/Topbar/Topbar.jsx","containers/Stories/index.jsx","containers/Stories/Stories.jsx","components/Loading/index.jsx","components/Loading/Loading.jsx","components/Post/index.jsx","components/Post/Post.jsx","containers/Posts/index.jsx","containers/Posts/Posts.jsx","routes/FeedRoute/index.jsx","routes/FeedRoute/FeedRoute.jsx","components/User/index.jsx","components/User/User.jsx","containers/UsersList/UsersList.jsx","routes/UsersRoute/index.jsx","routes/UsersRoute/UsersRoute.jsx","containers/UserProfile/index.jsx","containers/UserProfile/UserProfile.jsx","containers/UserPosts/index.jsx","containers/UserPosts/UserPosts.jsx","routes/ProfileRoute/index.jsx","routes/ProfileRoute/ProfileRoute.jsx","components/SuccessMessage/index.jsx","components/SuccessMessage/SuccessMessage.jsx","containers/UserForm/index.jsx","containers/UserForm/UserForm.jsx","routes/NewUserRoute/index.jsx","routes/NewUserRoute/NewUserRoute.jsx","routes/index.jsx","containers/App/index.jsx","containers/App/App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref","svgRef","title","props","viewBox","ref","id","transform","d","style","fill","clipRule","undefined","clipPath","width","height","ForwardRef","forwardRef","Topbar","className","data-testid","to","Stories","stories","getUserHandler","Fragment","map","story","index","src","user","avatar","alt","name","Loading","Post","postInfo","userInfo","imageUrl","Posts","posts","post","FeedRoute","useState","setStories","setPosts","useEffect","newPosts","fetch","then","response","json","users","push","newStories","userId","User","infoUser","username","UersList","UsersRoute","userList","setUserList","data","console","log","UserProfile","UserPosts","ProfileRoute","useParams","setUser","findUser","SuccessMessage","xmlns","cx","cy","r","stroke","strokeWidth","strokeLinecap","points","UserForm","success","setSucces","setName","setUsername","email","setEmail","setAvatar","value","onChange","event","onClick","newUser","method","body","JSON","stringify","NewUserRoute","Routes","exact","path","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.476056a8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"instagram-loco\");\n\nvar SvgInstagramLogo = function SvgInstagramLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 216 68.15\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip-path\",\n    transform: \"translate(5 5)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.6.2C6.39,2,1.75,6.92.29,13.15-1.57,21,6.15,24.38,6.78,23.28,7.52,22,5.4,21.56,5,17.47c-.57-5.29,1.91-11.2,5-13.79.57-.48.54.19.54,1.43,0,2.22-.12,22.13-.12,26.28,0,5.62-.23,7.4-.65,9.15s-1.11,3-.59,3.44,3.05-.71,4.47-2.7A14.6,14.6,0,0,0,16.05,33c.13-3.75.13-9.68.13-13.07,0-3.11.06-12.2-.05-17.67,0-1.34-3.76-2.74-5.53-2M205.07,29.73c-.61,0-.89.63-1.12,1.69-.8,3.67-1.64,4.5-2.73,4.5s-2.3-1.82-2.58-5.46a121.47,121.47,0,0,1,.1-13.37c.06-1.08-.24-2.14-3.14-3.19-1.25-.45-3.07-1.12-4,1.06a53.55,53.55,0,0,0-3.78,13c0,.1-.14.12-.16-.12a99.14,99.14,0,0,1-.53-10.51,3.15,3.15,0,0,0-1.57-3c-.85-.53-3.43-1.48-4.36-.35-.8.91-1.73,3.38-2.7,6.32-.79,2.38-1.34,4-1.34,4s0-6.43,0-8.87a1.25,1.25,0,0,0-.82-1.28,17.08,17.08,0,0,0-3.27-.66c-.89,0-1.11.49-1.11,1.21,0,.1-.14,8.46-.14,14.31v.83c-.49,2.69-2.08,6.34-3.81,6.34s-2.55-1.53-2.55-8.5c0-4.07.12-5.84.18-8.78,0-1.7.1-3,.1-3.29,0-.91-1.59-1.37-2.32-1.54a6.83,6.83,0,0,0-1.88-.2,1.16,1.16,0,0,0-1.2,1.13v1a6.72,6.72,0,0,0-3.35-2.7c-2.62-.78-5.36-.09-7.42,2.79a16.89,16.89,0,0,0-3,8.58,25.42,25.42,0,0,0,.31,7.81c-.61,2.63-1.74,3.71-3,3.71-1.8,0-3.11-2.93-3-8a45.36,45.36,0,0,1,1.51-9.06,2.92,2.92,0,0,0-.58-2.92c-.58-.66-1.83-1-3.62-.59-1.27.3-3.09.62-4.76.87a9.41,9.41,0,0,0,.18-1.11c.44-3.69-3.59-3.39-4.88-2.21a4.56,4.56,0,0,0-1.49,3,3.58,3.58,0,0,0,1.63,3.49,35.91,35.91,0,0,1-3.81,9.42,43.21,43.21,0,0,1-2.38,3.72c0-.43,0-.86,0-1.29,0-6.1.07-10.9.1-12.63s.11-3,.1-3.26c0-.66-.4-.91-1.21-1.23a8.57,8.57,0,0,0-2.43-.54c-1.11-.09-1.78.5-1.76,1.19V16a6.7,6.7,0,0,0-3.34-2.7c-2.63-.78-5.36-.09-7.43,2.79a18.38,18.38,0,0,0-3,8.56,26.09,26.09,0,0,0,.16,7.34c-.42,2.05-1.62,4.2-3,4.2-1.73,0-2.72-1.53-2.72-8.5,0-4.07.13-5.84.19-8.78,0-1.7.1-3,.1-3.29,0-.91-1.59-1.37-2.32-1.54a6.91,6.91,0,0,0-1.94-.2,1.24,1.24,0,0,0-1.14,1.09v1a6.76,6.76,0,0,0-3.35-2.7c-2.62-.78-5.34-.08-7.42,2.79-1.36,1.86-2.46,3.93-3,8.52a27.27,27.27,0,0,0-.23,3.72c-.54,3.29-2.93,7.08-4.89,7.08-1.14,0-2.23-2.2-2.23-6.91,0-6.26.39-15.18.46-16l2.94-.05c1.24,0,2.35,0,4-.07.83,0,1.62-3,.77-3.34a28.52,28.52,0,0,0-4.19-.33c-.9,0-3.43-.21-3.43-.21s.23-5.92.29-6.55-.64-.79-1-.95A13.46,13.46,0,0,0,69,.12c-1.39-.29-2,0-2.14,1.15-.18,1.77-.28,6.94-.28,6.94-1,0-4.49-.2-5.5-.2s-2,4-.66,4.09c1.5.06,4.12.11,5.85.16,0,0-.07,9.07-.07,11.87V25a13.67,13.67,0,0,1-4.32,7.64c.72-3.28-.75-5.74-3.41-7.83-1-.77-2.92-2.22-5.08-3.81a13.18,13.18,0,0,0,2.37-3.7c.78-1.75.82-3.76-1.12-4.2A5.78,5.78,0,0,0,48,17.18,4.73,4.73,0,0,0,48.91,22l.28.33c-.72,1.39-1.71,3.25-2.55,4.69-2.33,4-4.09,7.18-5.42,7.18-1.06,0-1-3.22-1-6.23,0-2.6.19-6.5.34-10.55a2.94,2.94,0,0,0-1.75-2.79,7.79,7.79,0,0,0-3-1.24c-1.26,0-4.92.17-8.37,10.11-.43,1.25-1.29,3.53-1.29,3.53l.07-11.95a.8.8,0,0,0-.49-.73,8.43,8.43,0,0,0-3.52-1c-.65,0-1,.3-1,.91L21.08,33a27.4,27.4,0,0,0,.18,3.8,3.9,3.9,0,0,0,.65,1.67,1.83,1.83,0,0,0,1.14.72c.5.11,3.24.46,3.38-.59A38.32,38.32,0,0,1,28.05,31c2.24-7.84,5.15-11.66,6.53-13,.23-.23.51-.25.5.14-.06,1.72-.27,6-.41,9.66-.37,9.76,1.42,11.57,4,11.57,2,0,4.7-1.93,7.65-6.81,1.83-3.05,3.62-6,4.9-8.18.89.82,1.9,1.71,2.9,2.66,2.33,2.2,3.09,4.29,2.59,6.27-.39,1.51-1.85,3.08-4.45,1.56-.76-.45-1.09-.79-1.85-1.29A1.31,1.31,0,0,0,49,33.5a5,5,0,0,0-1.84,2.81c-.31,1.12.81,1.71,2,2.22a15.5,15.5,0,0,0,4.55.9c5.37.18,9.67-2.58,12.66-9.7.54,6.15,2.82,9.63,6.78,9.63,2.65,0,5.31-3.41,6.47-6.77A12,12,0,0,0,81,36.16c3,4.81,9,3.78,11.95-.31a8.28,8.28,0,0,0,1.07-1.72,5.59,5.59,0,0,0,5.34,5.21c2,0,4.08-.94,5.53-4.19a9,9,0,0,0,.56,1c3.05,4.81,9,3.78,12-.31l.37-.53.09,2.54-2.74,2.5c-4.6,4.19-8.09,7.37-8.34,11.07-.33,4.72,3.52,6.47,6.43,6.7a8.23,8.23,0,0,0,7.36-3.83c1.43-2.09,2.36-6.6,2.29-11,0-1.78-.07-4-.1-6.48a51.34,51.34,0,0,0,5.1-7,53,53,0,0,0,4.77-10.18s1.7,0,3.51-.1c.58,0,.75.08.64.5s-2.29,8.8-.32,14.32c1.35,3.78,4.39,5,6.2,5,2.11,0,4.13-1.59,5.21-3.94.13.26.26.51.41.75,3.06,4.81,9,3.77,12-.31a12.26,12.26,0,0,0,1.06-1.72,5.81,5.81,0,0,0,5.55,5.23c1.87,0,3.64-.76,5.07-4.14a16,16,0,0,0,.3,3.09,2.1,2.1,0,0,0,1,.67,7.73,7.73,0,0,0,4.09.2c.44-.09.79-.44.84-1.36.12-2.41.05-6.47.78-9.48a27.52,27.52,0,0,1,2.93-8c.3-.55.65-.64.66-.06,0,1.16.09,4.58.56,9.17.35,3.39.82,5.38,1.18,6a3.34,3.34,0,0,0,3.34,1.89c.65,0,2-.18,1.91-1.33a36.32,36.32,0,0,1,1.26-9,44,44,0,0,1,2.59-7.26c.18-.4.26-.09.26,0-.1,2.24-.33,9.57.59,13.57,1.24,5.43,4.84,6,6.09,6,2.67,0,4.86-2,5.6-7.35.17-1.28-.09-2.28-.88-2.28M93,26.44a17.19,17.19,0,0,1-1.59,6.89c-1.6,3.1-4.78,4.08-6.18-.4-1-3.23-.66-7.62-.24-10,.62-3.53,2.18-6,4.62-5.8s3.71,3.45,3.39,9.31m24.45,0a19.25,19.25,0,0,1-1.59,6.85c-1.56,3.12-4.83,4.1-6.18-.4a22.29,22.29,0,0,1-.25-9.54c.59-3.24,2-6.26,4.62-6.26s3.76,2.75,3.4,9.35m.64,18.17c0,4.85-.8,9.11-2.45,10.35-2.34,1.75-5.48.43-4.83-3.11.58-3.14,3.3-6.34,7.29-10.25,0,0,0,.89,0,3m42.2-18.14a17.32,17.32,0,0,1-1.59,6.82c-1.57,3.12-4.81,4.09-6.19-.4a25.36,25.36,0,0,1-.24-9.93c.55-3.48,2.08-6.1,4.62-5.87s3.67,3.45,3.4,9.38\",\n    style: {\n      fill: \"none\",\n      clipRule: \"evenodd\"\n    }\n  }))), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, /*#__PURE__*/React.createElement(\"g\", {\n    style: {\n      clipPath: \"url(#clip-path)\"\n    }\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 216,\n    height: 68.15,\n    style: {\n      fill: \"#ffffff\"\n    }\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgInstagramLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/instagram-logo.1ff53bdd.svg\";\nexport { ForwardRef as ReactComponent };","import Topbar from './Topbar';\n\nexport default Topbar;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { ReactComponent as LogoSvg } from '../../assets/img/instagram-logo.svg';\n\nimport './Topbar.scss';\n\nconst Topbar = () => (\n  <header className=\"topbar\" data-testid=\"topbar\">\n  <div className=\"container\">\n    <Link to=\"/\" className=\"topbar__logo\">\n      <LogoSvg/>\n    </Link>\n    <div className=\"topbar__group\">\n      <Link to=\"/users\" className=\"topbar__icon\">\n        <i className=\"fas fa-users\"/>\n        <span>Usuários</span>\n      </Link>\n      <Link to=\"/newuser\" className=\"topbar__icon\">\n        <i className=\"fas fa-user-plus\"/>\n        <span>Nova Conta</span>\n      </Link>\n    </div>\n  </div>\n</header>\n);\n\nexport default Topbar;\n","import Stories from './Stories';\n\nexport default Stories;\n","import React, { useState } from \"react\";\n\nimport Story from '../../components/Story';\n\nimport './Stories.scss';\n\nconst Stories = ({ stories, getUserHandler }) => {\n  const showStory = false;\n\n  return (\n    <React.Fragment>\n      <section className=\"stories\" data-testid=\"stories\">\n        <div className=\"container\">\n          {\n            stories.map((story, index) => (\n              <button\n                key={story.id}\n                // onClick={() => handleStory(story)}\n                className={`user__thumb ${index === 0 && 'user__thumb--hasNew'}`}\n              >\n                <div className=\"user__thumb__wrapper\">\n                  <img src={story.user.avatar} alt={story.user.name} />\n                  </div>\n              </button>\n            ))\n          }\n        </div>\n      </section>\n\n      {showStory && (\n        <Story />\n        )}\n    </React.Fragment>\n  );\n};\n\nexport default Stories;\n","import Loading from './Loading';\n\nexport default Loading;\n","import React from 'react';\n\nimport './Loading.scss';\n\nconst Loading = () => (\n  <div className=\"loading\" data-testid=\"loading\">\n    <div className='preloader'>\n      <span />\n      <span />\n      <span />\n      <span />\n      <span />\n      <span />\n    </div>\n\n    Carregando\n  </div>\n);\n\nexport default Loading;\n","import Post from './Post';\n\nexport default Post;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Post.scss';\n\nconst Post = ({ postInfo, userInfo }) => {\n  return (\n    <article className=\"post\" data-testid=\"post\">\n      <header className=\"post__header\">\n        <div className=\"user\">\n          <div className=\"user__thumb\">\n            <img src={userInfo.avatar} alt={userInfo.name}/>\n          </div>\n\n          <div className=\"user__name\">\n            {userInfo.name}\n          </div>\n        </div>\n\n        <button\n            className=\"post__context\"\n        >\n          Following\n        </button>\n      </header>\n\n      <figure className=\"post__figure\">\n        <img src={postInfo.imageUrl} alt=\"\" />\n      </figure>\n      <nav className=\"post__controls\">\n        <button className=\"post__control\"><i className=\"fas fa-heart\" /></button>\n        <button className=\"post_status\">curtido por {userInfo.name}</button>\n      </nav>\n    </article>\n  );\n};\n\nexport default Post;\n","import Posts from './Posts';\n\nexport default Posts;\n","import React from 'react';\n\nimport Post from '../../components/Post';\n\nconst Posts = ({ posts, getUserHandler }) => (\n  <div className=\"container\" data-testid=\"posts\">\n      {\n        posts.map((post) => (\n          <Post key={post.id} postInfo={post} userInfo={post.user} />\n        ))\n      }\n  </div>\n);\n\nexport default Posts;\n","import FeedRoute from './FeedRoute';\n\nexport default FeedRoute;\n","import React, { useState, useEffect } from 'react';\n\nimport Stories from '../../containers/Stories';\nimport Loading from '../../components/Loading';\n\nimport Posts from '../../containers/Posts';\n\nimport './FeedRoute.scss';\n\nconst FeedRoute = () => {\n  const userID = 1;\n  const [stories, setStories] = useState([])\n  const [posts, setPosts] = useState([])\n\n  useEffect(() => {\n    let newPosts = [...posts];\n\n    //Getting all users\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/users\")\n      .then(response => response.json())\n      .then(users => {\n        //To each user, get all his posts\n        users.map((user) => {\n          fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${user.id}/posts`)\n            .then(response => response.json())\n            .then(posts => {\n              //With all posts, add one by one in the array of posts\n              //And add the respective user to the post too\n              posts.map((post) => {\n                newPosts.push({ ...post, user })\n                setPosts(newPosts);\n              })\n            })\n        })\n      })\n\n  }, []);\n\n  useEffect(() => {\n    let newStories = [...stories];\n\n    //Getting all the stories\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/stories\")\n      .then(response => response.json())\n      .then(stories => {\n        //To each storie, it has a userId associeted\n        //Throw this userId, we search the informations about the user as image and name\n        stories.map((story) => {\n          fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${story.userId}`)\n            .then(response => response.json())\n            .then(user => {\n                newStories.push({...story, user})\n                setStories(newStories);\n            })\n        })\n      })\n\n  }, [])\n\n  return (\n    <div data-testid=\"feed-route\">\n      { stories.length != 0 ?\n          <Stories stories={stories} />\n        : <Loading/>\n      }\n      { posts.length != 0 ?\n          <Posts posts={posts} />\n        : <Loading/>\n      }\n    </div>\n  );\n};\n\nexport default FeedRoute;\n","import User from './User';\n\nexport default User;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nconst User = ({ infoUser })  => {\n  const {avatar, name, username } = infoUser;\n\n  return (\n    <article className=\"post\" data-testid=\"user\">\n      <header className=\"post__header\">\n        <div className=\"user__thumb\">\n          <img src={avatar} alt={name}/>\n        </div>\n        <div className=\"user__name\">{name}</div>\n        <div className=\"user__username\">{username}</div>\n      </header>\n    </article>\n  )\n};\n\nexport default User;\n","import React from 'react';\n\nimport User from '../../components/User';\nimport Loading from '../../components/Loading';\n\nimport './UsersList.scss';\n\nconst UersList = ({ users }) => {\n  return (\n    <section className=\"users-list\">\n      { users.length == 0 ?\n        <Loading /> \n        : users.map((user) => (\n          <User key={user.id} infoUser={user} />\n        ))\n      }\n    </section>\n  )\n};\n\nexport default UersList;\n","import UsersRoute from './UsersRoute';\n\nexport default UsersRoute;\n","import React, { useState, useEffect } from 'react';\n\nimport UsersList from '../../containers/UsersList/UsersList';\n\nconst UsersRoute = () => {\n  const [userList, setUserList] = useState([]);\n  \n  useEffect(() => {\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/users\")\n      .then(response => response.json())\n      .then((data) => {\n          console.log(data)\n          setUserList(data);\n        }\n      );\n  }, [])\n  \n  return (\n    <div className=\"container\" data-testid=\"users-route\">\n      <UsersList users={userList}/>\n    </div>\n  );\n};\n\nexport default UsersRoute;\n","import UserProfile from './UserProfile';\n\nexport default UserProfile;\n","import React from 'react';\n\nimport './UserProfile.scss';\n\nconst UserProfile = ({ avatar, name, username }) => {\n  return (\n    <section className=\"profile\" data-testid=\"user-profile\">\n      <div className=\"profile-data\">\n        <img className=\"user__thumb\" src={avatar} alt={name}/>\n        <div className=\"user__name\">\n          <p>{name}</p>\n          <span>{username}</span>\n        </div>\n      </div>\n    </section>\n  )\n};\n\nexport default UserProfile;\n","import UserPosts from './UserPosts';\n\nexport default UserPosts;\n","import React from 'react';\n\nimport Post from '../../components/Post';\n\nimport './UserPosts.scss';\n\nconst UserPosts = ({ posts  }) => (\n  <div className=\"container\" data-testid=\"user-posts\">\n    <div className=\"user-posts\">\n    </div>\n  </div>\n);\n\nexport default UserPosts;\n","import ProfileRoute from './ProfileRoute';\n\nexport default ProfileRoute;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router\";\n\nimport UserProfile from '../../containers/UserProfile';\nimport UserPosts from '../../containers/UserPosts';\n\nimport Loading from '../../components/Loading';\n\nconst ProfileRoute = () => {\n  const { username } = useParams();\n  const [user, setUser] = useState({});\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/users\")\n      .then(response => response.json())\n      .then(users => {\n        setUser(findUser(users, username));\n      })\n  }, [])\n\n  function findUser(users, username) {\n    for(let i = 0; i < users.length; i++) {\n      if(users[i].username == username)  {\n        return users[i];\n      }\n    }\n  }\n\n  return (\n    <div data-testid=\"profile-route\"> \n      <UserProfile avatar={user.avatar} name={user.name} username={user.username} />\n      <UserPosts posts={posts} />\n    </div>\n  );\n};\n\nexport default ProfileRoute;\n","import SuccessMessage from './SuccessMessage';\n\nexport default SuccessMessage;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport './SuccessMessage.scss';\n\nconst SuccessMessage = () => (\n  <div className=\"success-message\" data-testid=\"success-message\">\n    <svg\n      className=\"successAnimation animated\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"70\"\n      height=\"70\"\n      viewBox=\"0 0 70 70\"\n    >\n      <path\n        className=\"successAnimationResult\"\n        fill=\"#ffffff\"\n        d=\"M35,60 C21.1928813,60 10,48.8071187 10,35 C10,21.1928813 21.1928813,10 35,10 C48.8071187,10 60,21.1928813 60,35 C60,48.8071187 48.8071187,60 35,60 Z M23.6332378,33.2260427 L22.3667622,34.7739573 L34.1433655,44.40936 L47.776114,27.6305926 L46.223886,26.3694074 L33.8566345,41.59064 L23.6332378,33.2260427 Z\"\n      />\n        <circle\n          className=\"successAnimationCircle\"\n          cx=\"35\"\n          cy=\"35\"\n          r=\"24\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          fill=\"transparent\"\n        />\n\n        <polyline\n          className=\"successAnimationCheck\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          points=\"23 34 34 43 47 27\"\n          fill=\"transparent\"\n        />\n    </svg>\n\n    <h2 className=\"success-message__title\">Usuário Cadastrado!</h2>\n\n    <div className=\"success-message__content\">\n      <p>Visite a página <Link to=\"/users\">users</Link> para visualizar o novo usuário</p>\n    </div>\n  </div>\n);\n\nexport default SuccessMessage;\n","import UserForm from './UserForm';\n\nexport default UserForm;\n","import React, { useState } from 'react';\n\nimport SuccessMessage from '../../components/SuccessMessage';\n\nimport './UserForm.scss';\n\nconst UserForm = () => {\n  const [success, setSucces] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n\n  const handleCadastrar = () => {\n    let newUser = {\n      name: name,\n      avatar: avatar,\n      username: username,\n      email: email\n    }\n\n    fetch(\"https://5e7d0266a917d70016684219.mockapi.io/api/v1/users\", {\n      method: \"POST\",\n      body: JSON.stringify(newUser)\n    }).then(() => setSucces(true))\n  }   \n\n  return (\n    <React.Fragment>\n      <div className=\"post__form\" data-testid=\"user-form\">\n        <div className=\"profile-data\">\n          <img className=\"user__thumb\" src={avatar} alt={name}/>\n          <div className=\"user__name\">\n            <p>{name}</p>\n            <span>{username}</span>\n          </div>\n        </div>\n        <div className=\"post__form__wrapper\">\n          <label>Nome</label>\n          <input value={name} onChange={(event) => setName(event.target.value)} />\n          <label>Usuário</label>\n          <input value={username} onChange={(event) => setUsername(event.target.value)} />\n          <label>Email</label>\n          <input value={email} onChange={(event) => setEmail(event.target.value)} />\n          <label>Url da Imagem de Perfil (use a url da imagem do Linkedin)</label>\n          <input value={avatar} onChange={(event) => setAvatar(event.target.value)} />\n          <button onClick={handleCadastrar}>Cadastrar</button>\n        </div>\n      </div>\n\n      { success ?\n        <SuccessMessage/>\n        : null\n      }\n\n    </React.Fragment>\n  );\n};\n\nexport default UserForm;\n","import NewUserRoute from './NewUserRoute';\n\nexport default NewUserRoute;\n","import React from 'react';\n\nimport UserForm from '../../containers/UserForm';\n\nconst NewUserRoute = () => (\n    <div data-testid=\"new-user-route\">\n        <UserForm/>\n    </div>\n);\n\nexport default NewUserRoute;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport FeedRoute from './FeedRoute';\nimport UsersRoute from './UsersRoute';\nimport ProfileRoute from './ProfileRoute';\nimport NewUserRoute from './NewUserRoute';\n\nconst Routes = () => (\n  <Switch>\n    <Route exact path=\"/\">\n      <FeedRoute />\n    </Route>\n\n    <Route exact path=\"/users\">\n      <UsersRoute />\n    </Route>\n\n    <Route path=\"/users/:username\">\n      <ProfileRoute />\n    </Route>\n\n    <Route path=\"/newuser\">\n      <NewUserRoute/>  \n    </Route>\n\n  </Switch>\n);\n\nexport default Routes;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Topbar from '../../components/Topbar';\n\nimport Routes from '../../routes';\n\nimport './App.scss';\n\nconst App = () => (\n  <div data-testid=\"app\">\n    <BrowserRouter>\n      <Topbar/>\n      <Routes/>\n    </BrowserRouter>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './containers/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}